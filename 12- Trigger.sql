/* ENTENDENDO UMA TRIGGER(GATILHO)*/

/* ESTRUTURA DE UMA TRIGGER*/

CREATE TRIGGER NOME
BEFORE/AFTER INSERT/DELETE/UPDATE ON TABELA
FOR EACH ROW (PARA CADA LINHA)
BEGIN -> INICIO
	QUALQUER COMANDO SQL;
END -> FIM
$

/* LEMBRAR DE USAR O DELIMITADOR */

CREATE DATABASE AULA40;

USE AULA40;

CREATE TABLE USUARIO(
	IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30),
	SENHA VARCHAR(100)
);

---CRIAR TABELA DE BACKUP PARA TODA VEZ QUE EXCLUIR UM USUARIO
---EU PODEREI COPIAR

CREATE TABLE BKP_USUARIO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDUSUARIO INT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30)
);

--NAO FAZEMOS BACKUP NA SENHA POR MOTIVOS DE SEGURANCA
--- A SENHA DEVE SER CRIPTOGRAFADA SEMPRE

DELIMITER $

CREATE TRIGGER BACKUP_USER
BEFORE DELETE ON USUARIO
FOR EACH ROW 
BEGIN 
	
END
$

/*
INSERT          				|          DELETE           |     UPDATE
BEFORE(antes) & AFTER(depois)	|	  BEFORE / AFTER		| BEFORE / AFTER
1			      2				|		3		4			|	5		6


Então eu tenho 6 momentos que posso disparar uma trigger
--Não podemos colocar uma trigger disparando no mesmo momento para 
a mesma tabela.
*/

/*
	NEW/novo                  | OLD/velho
	INSERT					  |  DELETE
	UPDATE					  |						

Quem vai entrar e o valor NEW.
É Quem vai sair e o valor OLD.

*/
--Quero Backupear o usuario deletado

DELIMITER $

CREATE TRIGGER BACKUP_USER
BEFORE DELETE ON USUARIO
FOR EACH ROW 
BEGIN 
	INSERT INTO BKP_USUARIO VALUES
	(NULL,OLD.IDUSUARIO,OLD.NOME,OLD.LOGIN);
END
$

INSERT INTO USUARIO VALUES(NULL,'CONSTANTINO','CONSTA2009','123')$

DELIMITER ;

SELECT * FROM USUARIO;

DELETE FROM USUARIO WHERE IDUSUARIO = 1;

SELECT * FROM BKP_USUARIO;

/* TRIGGER PARA BANCO DE BACKUPS*/

--COMUNICACAO ENTRE DOIS BANCOS

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	 IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	 NOME VARCHAR(30),
	 VALOR FLOAT(10,2)
);

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

USE LOJA;

INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,1000,'TESTE',0.0);

USE BACKUP;

USE LOJA;

DELIMITER $
--- CRIANDO UMA TRIGGER QUE AO INSERIR NA TABELA PRINCIPAL INSERI TAMBEM NA BACKUP
---BACKUP LOGICO

CREATE TRIGGER BACKUP_PRODUTO
BEFORE INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTO VALUES
	(NULL,NEW.IDPRODUTO,NEW.NOME,NEW.VALOR);
END
$
-------
DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);

SELECT * FROM BKP_PRODUTO;

---- BACKUP AO DELETAR
DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DELETE
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTO VALUES
	(NULL,OLD.IDPRODUTO,OLD.NOME,OLD.VALOR);
END
$

----DROPANDO TRIGGER

DELIMITER ;

DROP TRIGGER BACKUP_PRODUTO;

--CORRINDO TRIGGER DE BACKUP APOS INSERCAO
--MODIFICAMOS O MOMENTO DE DISPARO DA TRIGGER
--SERÁ INSERIDO NO BACKUP APOS INSERIR NA PRINCIPAL
DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTO VALUES
	(NULL,NEW.IDPRODUTO,NEW.NOME,NEW.VALOR,"I");
END
$

DELIMITER ;

/*EVENTOS DA TRIGGER*/

ALTER TABLE BACKUP.BKP_PRODUTO
ADD EVENTO CHAR(1);

DROP TRIGGER BACKUP_PRODUTO_DELETE;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DELETE
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTO VALUES
	(NULL,OLD.IDPRODUTO,OLD.NOME,OLD.VALOR,'D');
END
$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM 1',53.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM 2',52.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM 3',51.00);


DELETE FROM PRODUTO WHERE IDPRODUTO = 3;

SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;

/* TRIGGER DE AUDITORIA*/

DELIMITER ;

DROP DATABASE LOJA;

DROP DATABASE BACKUP;

CREATE DATABASE LOJA;

CREATE TABLE PRODUTO(
	 IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	 NOME VARCHAR(30),
	 VALOR FLOAT(10,2)
);

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM 1',53.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM 2',52.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM 3',51.00);

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE CKP_PRODUTO(
	 IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	 IDPRODUTO INT,
	 NOME VARCHAR(30),
	 VALOR_ORIGINAL FLOAT(10,2),
	 VALOR_ALTERADO FLOAT(10,2),
	 DATA DATETIME,
	 USUARIO VARCHAR(30),
	 EVENTO CHAR(1)
);

---MOSTRA DATA E HORA
---QUANDO?

SELECT NOW;

--- MOSTRA USUARIO LOGADO
---QUEM?

SELECT CURRENT_USER();

-----------


USE BACKUP;

USE LOJA;

SELECT * FROM PRODUTO;

---CRIANDO TRIGGER AUDITORIA

DELIMITER $

CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTO
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTO VALUES
	(NULL,OLD.IDPRODUTO,OLD.NOME, OLD.VALOR,
	NEW.VALOR,NOW(),CURRENT_USER(),"U");
END
$

DELIMITER ;

UPDATE PRODUTO SET VALOR = 110.00
WHERE IDPRODUTO = 3;
--------CORRIGINDO NOME ERRADO
DROP TABLE CKP_PRODUTO;

CREATE TABLE BKP_PRODUTO(
	 IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	 IDPRODUTO INT,
	 NOME VARCHAR(30),
	 VALOR_ORIGINAL FLOAT(10,2),
	 VALOR_ALTERADO FLOAT(10,2),
	 DATA DATETIME,
	 USUARIO VARCHAR(30),
	 EVENTO CHAR(1)
);


-----TESTANDO
SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;